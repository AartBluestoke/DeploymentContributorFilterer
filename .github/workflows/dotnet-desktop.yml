
name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: AgileSqlClub.SqlPackageFilter.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: AgileSqlClub.SqlPackageFilter.UnitTests\AgileSqlClub.SqlPackageFilter.UnitTests.csproj        # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1
  

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore packages and build the application
      run: msbuild $env:Solution_Name /restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
          
    # Upload the package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.configuration }}-AgileSqlClub.SqlPackageFilter
        path: SqlPackageFilter/bin/${{ matrix.configuration }}/**/AgileSqlClub.SqlPackageFilter.*
